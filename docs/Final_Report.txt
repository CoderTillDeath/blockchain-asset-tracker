======================================================================================
A. A short description of our project, to give the context. 

The project is simply an asset tracker similar to what you would find when ordering a product from Amazon, or ebay, and having it shipped through UPS, USPS, or FedEx.
We are emulating the existing relationship between a provider of products and a shipping company using blockchain technology as a proof of concept.
Our project provides an alternative to package tracking and systems for departure/arrival scans in the transfer of an asset. 

=======================================================================================
B. Details of challenges faced, how they were resolved or not resolved, any workarounds: 

Most of our difficulties fit into 2 major categories:
1. Development environment issues
2. Lack of documentation and support

For problem #1, we had problems on both our mobile app and our blockchain.
For the mobile app, we were using the Xamarin framework to build apps that were cross platform. However, our project solution would only ever build on one computer at a time, and never on any others. For us, a majority of time was spent just trying to get everyone's computer to build the app. Problems ranging from Android SDK issues to Visual Studio issues were very common in these early weeks. 
With our blockchain, there was an interesting problem we ran into throughout development. We didn't really have a convenient way to transition between updates to the blockchain, so everytime an update needed to be pushed, the blockchain would need to be taken down for about 5-10 minutes at a time, which caused inconvenience at times. We also weren't really sure whether the time invested in setting up backup solutions like apiary or just setting up another instance were going to be that helpful, so we didn't, and development of our UI had to stop when the blockchain was down. Also, we ran into an issue where our cloud service had expired, leaving us without anything to do for a few days.

For problem #2, again the mobile app and blockchain were the main issues here.
For our mobile app, Xamarin is a relatively new framework it seems, with not as much support or documentation as we'd like. When it came to add UI features like swiping to reveal a button, while there were countless examples on how to do this for Android and iOS, nothing popped up for Xamarin. It was understood near the end that there were ways to bring these features to Xamarin if we wrote the middleware ourselves, but none of the team had ever worked with Xamarin in the past, and didn't really have the time to learn this aspect of it.
On the blockchain, our sponsor had recommended we use hyperldeger composer because of how easy it was to get started with. While this worked exceptionally well for us in the beginning, when the sponsor began asking for more complex features on our blockchain, the limitations of the Composer really started to show. The technology was new, and the documentation, while not terrible, was definitely not mature, and it wasn't always clear the difference between something that wasn't possible and something that wasn't documented, like the halting problem. Thus, a lot of time was spent in trying to add the features requested, and while some of the effort led to discoveries of features that were not documented, a lot of time was spent trying to accomplish tasks that weren't even possible to begin with. 

=======================================================================================
C. Anything else interesting/significant the team likes to report, lessons learned, etc. 

We were unaware, or perhaps forgotten, about the expiration of our lease on the server. When that went down we ran into a problem with running the app. 
Our app requires a connection to the server to log into and get information from that server to display onto the app. 
So, without the server running we couldn’t get into the app and view our changes to the UI. 
In hindsight we could have set up a way to mock data for the purpose of being able to use the app when the blockchain is down.

While a lot of the merits of this technology is aready realized in cryptocurrency today, not all of these things necessarily translate to the tracking of physical assets.
Our app handles the transfer of virtual packages that are associated with a physical package via a QR code.
We can verify any transactions made by the app but anything involving the physical package is out of our control.

